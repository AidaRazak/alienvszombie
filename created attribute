void AVZ::displayAlienStatus(int &A_health, int A_attack_damage, int A_attack_range)
{

    cout << "Alien Status  >>>";
    cout << " ";
    cout << "Health: " << A_health;

    cout << " ";
    cout << "| Attack Damage: " << A_attack_damage;
    cout << " ";
    cout << "| Attack Range: " << A_attack_range << endl;
}

void AVZ::displayZombieStatus(int numZombies, int Z_health, int Z_attack_damage, int Z_attack_range)
{

    for (int i = 0; i < numZombies; i++)
    {
        cout << "Zombie Status"
             << " " << i + 1 << ">>>";
        cout << " ";
        cout << "Health: " << Z_health;
        cout << " ";
        cout << "| Attack Damage: " << Z_attack_damage;
        cout << " ";
        cout << "| Attack Range: " << Z_attack_range << endl;
    }
}

void AVZ::fightZombies(int zombies) {
    // Generate the alien's life value
    srand(time(NULL)); // seed the random number generator
    int alienLife = rand() % 101 + 100; // life between 100 and 200
    int alienAttack = 0; // Setting the alien's attack value to zero

    // Loop over the zombies
    for (int i = 1; i <= zombies; i++)
    {
        // Generate the zombie's life, attack, and range values
        int zombieLife = rand() % 101 + 100; // generate random life value between 100 and 200
        int zombieAttack = rand() % 11 + 90; // generate random attack value between 90 and 100
        int zombieRange = rand() % 5 + 1;

        // Output the zombie's information
        cout << "Zombie " << i << "    Life:  " << zombieLife << "    Attack:  " << zombieAttack << " Range:     " << zombieRange << endl;
    }

    // Output the alien's information
    cout << "Alien       Life: " << alienLife << "   Attack:" << alienAttack << endl;
}
